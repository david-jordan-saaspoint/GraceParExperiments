class SfdcsController < ApplicationController
  # GET /sfdcs
  # GET /sfdcs.xml
  def index
    @sfdcs = Sfdc.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @sfdcs }
    end
  end

  # GET /sfdcs/1
  # GET /sfdcs/1.xml
  def show
    @sfdc = Sfdc.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.xml  { render :xml => @sfdc }
    end
  end

  # GET /sfdcs/new
  # GET /sfdcs/new.xml
  def new
    @sfdc = Sfdc.new

    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @sfdc }
    end
  end

  # GET /sfdcs/1/edit
  def edit
    @sfdc = Sfdc.find(params[:id])
  end

  # POST /sfdcs
  # POST /sfdcs.xml
  def create
    @sfdc = Sfdc.new(params[:sfdc])

    respond_to do |format|
      if @sfdc.save
        format.html { redirect_to(@sfdc, :notice => 'Sfdc was successfully created.') }
        format.xml  { render :xml => @sfdc, :status => :created, :location => @sfdc }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @sfdc.errors, :status => :unprocessable_entity }
      end
    end
  end

  # PUT /sfdcs/1
  # PUT /sfdcs/1.xml
  def update
    @sfdc = Sfdc.find(params[:id])

    respond_to do |format|
      if @sfdc.update_attributes(params[:sfdc])
        format.html { redirect_to(@sfdc, :notice => 'Sfdc was successfully updated.') }
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @sfdc.errors, :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /sfdcs/1
  # DELETE /sfdcs/1.xml
  def destroy
    @sfdc = Sfdc.find(params[:id])
    @sfdc.destroy

    respond_to do |format|
      format.html { redirect_to(sfdcs_url) }
      format.xml  { head :ok }
    end
  end
end
